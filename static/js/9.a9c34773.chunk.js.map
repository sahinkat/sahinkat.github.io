{"version":3,"sources":["utils/AllDataUtils.js","../node_modules/regression/dist/regression.js","views/LogisticRegression/LogisticRegression.js"],"names":["axios","require","moment","__webpack_exports__","getCases","context","countryKey","callback","allDataObject","country","undefined","cases","length","get","CountryName","then","_ref","data","timeline","deaths","previousCases","previousDeaths","key","hasOwnProperty","push","Date","format","Key","Confirmed","Deaths","NewCases","NewDeaths","catch","error","console","log","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","module","_extends","Object","assign","target","i","arguments","source","prototype","call","_toConsumableArray","arr","Array","isArray","arr2","from","DEFAULT_OPTIONS","order","precision","period","determinationCoefficient","results","predictions","observations","forEach","d","sum","reduce","a","observation","mean","ssyy","difference","sse","accum","index","prediction","residual","round","number","factor","Math","pow","methods","linear","options","len","n","run","rise","gradient","intercept","predict","x","points","map","point","equation","r2","string","exponential","denominator","exp","b","coeffA","coeffB","logarithmic","power","polynomial","lhs","rhs","k","l","c","j","_l","coefficients","input","matrix","maxrow","abs","tmp","_j","_k","_j2","total","_k2","gaussianElimination","v","coeff","_i","concat","reverse","exports","keys","accumulator","name","_round","value","supplied","obj","defineProperty","enumerable","configurable","writable","apply","A","B","C","_","colorSet","colorCode","getStyle","errors","Cases","props","_this","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","loading","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","className","train","bind","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","state","maxConfirmed","mainChartOpts","tooltips","enabled","custom","CustomTooltips","intersect","mode","position","callbacks","labelColor","tooltipItem","chart","backgroundColor","datasets","datasetIndex","borderColor","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","elements","radius","hitRadius","hoverRadius","hoverBorderWidth","countries","CountryCode","inputs","selectedCountry","selectedCountries","mainChart","labels","radioSelected","self","setState","AllDataUtils","newContext","drawCovidGraph","removedCountry","remove","e","graphData","strMinDate","countryData","minDate","today","setDate","getDate","xIndex","dataForLogistic","xDataForLogistic","yDataForLogistic","countryConfirmedData","previousNumber","date","countryDataAtDate","find","regression","ma","ema","wma","predictedConfirmedData","predictIndex","label","pointHoverBackgroundColor","borderWidth","epochs","alpha","_this2","_loop","trainIndex","predY","func","epoch","x1","_this3","_ThemeContextProvider__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","row","md","htmlFor","disabled","type","id","bsSize","onChange","onCountryChange","r","color","isOpen","toggle","onDismiss","sm","placeholder","onMaxConfirmedChange","aria-label","onClick","onRadioBtnClick","active","style","height","marginTop","react_chartjs_2__WEBPACK_IMPORTED_MODULE_7__","Component"],"mappings":"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","file":"static/js/9.a9c34773.chunk.js","sourcesContent":["const axios = require('axios');\nvar moment = require('moment');\n\nlet _getCases = function (context, countryKey, callback) {\n  let allDataObject = context.allDataObject;\n  let country = allDataObject[countryKey];\n\n  if(country.cases === undefined || country.cases.length === 0) {\n    country.cases = [];\n    axios.get('https://corona.lmao.ninja/v2/historical/' + country.CountryName + '?lastdays=365')\n      .then(function ({ data }) {\n        let cases = data.timeline.cases;\n        let deaths = data.timeline.deaths;\n        let previousCases = 0;\n        let previousDeaths = 0;\n        for (let key in cases) {\n          if (cases.hasOwnProperty(key)) {\n            country.cases.push(\n              {\n                \"Date\":moment(key, 'MM/DD/YYYY').format('YYYY-MM-DD'),\n                \"Key\": countryKey,\n                \"Confirmed\":cases[key] >= previousCases ? cases[key] : previousCases,\n                \"Deaths\":deaths[key] | previousDeaths,\n                \"NewCases\":cases[key] >= previousCases ? (cases[key] - previousCases) : 0,\n                \"NewDeaths\":(deaths[key] - previousDeaths) | 0\n              }\n            );\n            previousCases = cases[key];\n            previousDeaths = deaths[key];\n          }\n        }\n\n        allDataObject[countryKey] = country;\n        context.allDataObject = allDataObject;\n        callback(context);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  } else {\n    callback(context);\n  }\n};\n\nexport default {\n    'getCases' : _getCases\n};\n","(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.regression = mod.exports;\n  }\n})(this, function (module) {\n  'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var DEFAULT_OPTIONS = {\n    order: 2,\n    precision: 2,\n    period: null\n  };\n  /**\n  * Determine the coefficient of determination (r^2) of a fit from the observations\n  * and predictions.\n  *\n  * @param {Array<Array<number>>} data - Pairs of observed x-y values\n  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n  *\n  * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n  */\n\n  function determinationCoefficient(data, results) {\n    var predictions = [];\n    var observations = [];\n    data.forEach(function (d, i) {\n      if (d[1] !== null) {\n        observations.push(d);\n        predictions.push(results[i]);\n      }\n    });\n    var sum = observations.reduce(function (a, observation) {\n      return a + observation[1];\n    }, 0);\n    var mean = sum / observations.length;\n    var ssyy = observations.reduce(function (a, observation) {\n      var difference = observation[1] - mean;\n      return a + difference * difference;\n    }, 0);\n    var sse = observations.reduce(function (accum, observation, index) {\n      var prediction = predictions[index];\n      var residual = observation[1] - prediction[1];\n      return accum + residual * residual;\n    }, 0);\n    return 1 - sse / ssyy;\n  }\n  /**\n  * Determine the solution of a system of linear equations A * x = b using\n  * Gaussian elimination.\n  *\n  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n  * @param {number} order - How many degrees to solve for\n  *\n  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n  */\n\n\n  function gaussianElimination(input, order) {\n    var matrix = input;\n    var n = input.length - 1;\n    var coefficients = [order];\n\n    for (var i = 0; i < n; i++) {\n      var maxrow = i;\n\n      for (var j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (var k = i; k < n + 1; k++) {\n        var tmp = matrix[k][i];\n        matrix[k][i] = matrix[k][maxrow];\n        matrix[k][maxrow] = tmp;\n      }\n\n      for (var _j = i + 1; _j < n; _j++) {\n        for (var _k = n; _k >= i; _k--) {\n          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (var _j2 = n - 1; _j2 >= 0; _j2--) {\n      var total = 0;\n\n      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\n        total += matrix[_k2][_j2] * coefficients[_k2];\n      }\n\n      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\n    }\n\n    return coefficients;\n  }\n  /**\n  * Round a number to a precision, specificed in number of decimal places\n  *\n  * @param {number} number - The number to round\n  * @param {number} precision - The number of decimal places to round to:\n  *                             > 0 means decimals, < 0 means powers of 10\n  *\n  *\n  * @return {numbr} - The number, rounded\n  */\n\n\n  function round(number, precision) {\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  }\n  /**\n  * The set of all fitting methods\n  *\n  * @namespace\n  */\n\n\n  var methods = {\n    linear: function linear(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = 0;\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          len++;\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0];\n          sum[3] += data[n][0] * data[n][1];\n          sum[4] += data[n][1] * data[n][1];\n        }\n      }\n\n      var run = len * sum[2] - sum[0] * sum[0];\n      var rise = len * sum[3] - sum[0] * sum[1];\n      var gradient = run === 0 ? 0 : round(rise / run, options.precision);\n      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [gradient, intercept],\n        r2: round(determinationCoefficient(data, points), options.precision),\n        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\n      };\n    },\n    exponential: function exponential(data, options) {\n      var sum = [0, 0, 0, 0, 0, 0];\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0] * data[n][1];\n          sum[3] += data[n][1] * Math.log(data[n][1]);\n          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n          sum[5] += data[n][0] * data[n][1];\n        }\n      }\n\n      var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n      var coeffA = round(a, options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    logarithmic: function logarithmic(data, options) {\n      var sum = [0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += data[n][1] * Math.log(data[n][0]);\n          sum[2] += data[n][1];\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\n      var coeffB = round(a, options.precision);\n      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    power: function power(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n          sum[2] += Math.log(data[n][1]);\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\n      var a = (sum[2] - b * sum[0]) / len;\n      var coeffA = round(Math.exp(a), options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'x^' + coeffB,\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    polynomial: function polynomial(data, options) {\n      var lhs = [];\n      var rhs = [];\n      var a = 0;\n      var b = 0;\n      var len = data.length;\n      var k = options.order + 1;\n\n      for (var i = 0; i < k; i++) {\n        for (var l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            a += Math.pow(data[l][0], i) * data[l][1];\n          }\n        }\n\n        lhs.push(a);\n        a = 0;\n        var c = [];\n\n        for (var j = 0; j < k; j++) {\n          for (var _l = 0; _l < len; _l++) {\n            if (data[_l][1] !== null) {\n              b += Math.pow(data[_l][0], i + j);\n            }\n          }\n\n          c.push(b);\n          b = 0;\n        }\n\n        rhs.push(c);\n      }\n\n      rhs.push(lhs);\n      var coefficients = gaussianElimination(rhs, k).map(function (v) {\n        return round(v, options.precision);\n      });\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\n          return sum + coeff * Math.pow(x, power);\n        }, 0), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      var string = 'y = ';\n\n      for (var _i = coefficients.length - 1; _i >= 0; _i--) {\n        if (_i > 1) {\n          string += coefficients[_i] + 'x^' + _i + ' + ';\n        } else if (_i === 1) {\n          string += coefficients[_i] + 'x + ';\n        } else {\n          string += coefficients[_i];\n        }\n      }\n\n      return {\n        string: string,\n        points: points,\n        predict: predict,\n        equation: [].concat(_toConsumableArray(coefficients)).reverse(),\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    }\n  };\n\n  function createWrapper() {\n    var reduce = function reduce(accumulator, name) {\n      return _extends({\n        _round: round\n      }, accumulator, _defineProperty({}, name, function (data, supplied) {\n        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\n      }));\n    };\n\n    return Object.keys(methods).reduce(reduce, {});\n  }\n\n  module.exports = createWrapper();\n});","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  FormGroup,\n  Input,\n  Label,\n  Row\n} from 'reactstrap';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport { getStyle } from '@coreui/coreui/dist/js/coreui-utilities';\nimport {\n  ma, ema, wma\n} from 'moving-averages'\nimport regression from 'regression';\nimport { ThemeContextConsumer } from \"../../ThemeContextProvider\";\nimport AllDataUtils from '../../utils/AllDataUtils';\n\nvar _ = require('lodash');\nvar moment = require('moment');\n\nconst colorSet = [\"primary\", \"warning\", \"success\", \"danger\", \"info\"];\nconst colorCode = [getStyle('--primary'), getStyle('--warning'), getStyle('--success'), getStyle('--danger'), getStyle('--info')];\n\nvar A, B, C;\nvar errors = [];\n\nclass Cases extends Component {\n  constructor(props) {\n    super(props);\n    this.train = this.train.bind(this);\n    this.predict = this.predict.bind(this);\n\n    this.state = {\n      maxConfirmed : 180000,\n      mainChartOpts : {\n        tooltips: {\n          enabled: false,\n          custom: CustomTooltips,\n          intersect: true,\n          mode: 'index',\n          position: 'nearest',\n          callbacks: {\n            labelColor: function(tooltipItem, chart) {\n              return { backgroundColor: chart.data.datasets[tooltipItem.datasetIndex].borderColor }\n            }\n          }\n        },\n        maintainAspectRatio: false,\n        legend: {\n          display: false,\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                drawOnChartArea: false,\n              },\n            }],\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                maxTicksLimit: 40,\n              },\n            }],\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3,\n          },\n        },\n      },\n      countries : [\n        {\n          \"Key\":\"TR\",\n          \"CountryCode\":\"TR\",\n          \"CountryName\":\"Turkey\",\n        }\n      ],\n      inputs : {\n        selectedCountry   : \"\",\n        selectedCountries : [],\n      },\n      mainChart : {\n        labels: [],\n        datasets: [],\n      },\n      radioSelected : 0,\n    };\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  onCountryChange(context, selectedCountry) {\n    let self = this;\n    selectedCountry = selectedCountry.target.value;\n    if(selectedCountry !== ''){\n      let inputs = this.state.inputs;\n      inputs.selectedCountries.push(selectedCountry);\n      this.setState({\n        inputs : inputs,\n      });\n    }\n    AllDataUtils.getCases(context, selectedCountry, function(newContext){\n      self.drawCovidGraph(newContext);\n    });\n  }\n\n  onDismiss(removedCountry, context) {\n    if(removedCountry !== ''){\n      let inputs = this.state.inputs;\n      _.remove(inputs.selectedCountries, function (country) {\n        return country === removedCountry;\n      });\n      this.setState({\n        inputs : inputs,\n      });\n    }\n\n    this.drawCovidGraph(context);\n  }\n\n  onRadioBtnClick(e, context){\n    this.setState({\n      radioSelected : e,\n    });\n\n    this.drawCovidGraph(context)\n  }\n\n  onMaxConfirmedChange(context, e){\n    if(e.target.value !== ''){\n      this.setState({\n        maxConfirmed : e.target.value,\n      });\n    }\n\n    this.drawCovidGraph(context);\n  }\n\n  drawCovidGraph(context){\n    let self = this;\n    let allDataObject = context.allDataObject;\n    let selectedCountries = this.state.inputs.selectedCountries;\n    let mainChart = this.state.mainChart;\n\n    let graphData = [];\n    mainChart.labels = [];\n    mainChart.datasets = [];\n    let strMinDate = \"9999-99-99\";\n    selectedCountries.forEach(function (country) {\n      let countryData = allDataObject[country];\n      graphData.push(countryData);\n      if(countryData.cases !== undefined && countryData.cases.length > 0) {\n        if(strMinDate > countryData.cases[0].Date) {\n          strMinDate = countryData.cases[0].Date;\n        }\n      }\n    });\n    let minDate = new Date(strMinDate);\n    let today = new Date();\n    today.setDate(today.getDate() + 100);\n\n    while(minDate < today) {\n      mainChart.labels.push(moment(minDate).format('DD/MM/YYYY'));\n      minDate.setDate(minDate.getDate() + 1);\n    }\n\n    let index = 0;\n    let xIndex = 0;\n    let dataForLogistic = [];\n    let xDataForLogistic = [];\n    let yDataForLogistic = [];\n    graphData.forEach(function (data) {\n      let countryConfirmedData = [];\n      let previousNumber = 0;\n      mainChart.labels.forEach(function (date) {\n        let countryDataAtDate = _.find(data.cases, ['Date', moment(date, 'DD/MM/YYYY').format('YYYY-MM-DD')]);\n        if(countryDataAtDate !== undefined){\n          countryConfirmedData.push(countryDataAtDate.Confirmed);\n          previousNumber = countryDataAtDate.Confirmed;\n          dataForLogistic.push([xIndex, countryDataAtDate.Confirmed]);\n          yDataForLogistic.push(countryDataAtDate.Confirmed);\n        } else {\n          countryConfirmedData.push(previousNumber);\n          dataForLogistic.push([xIndex, previousNumber])\n          yDataForLogistic.push(previousNumber);\n        }\n        xDataForLogistic.push(xIndex);\n        xIndex++;\n      });\n      regression.polynomial(dataForLogistic, { order: 3 });\n\n      if(self.state.radioSelected === 1){\n        countryConfirmedData = ma(countryConfirmedData, 3);\n      } else if(self.state.radioSelected === 2){\n        countryConfirmedData = ema(countryConfirmedData, 3);\n      } else if(self.state.radioSelected === 3){\n        countryConfirmedData = wma(countryConfirmedData, 3);\n      }\n\n      //epochs = 500;\n      //alpha = 0.2;\n      self.train(500, 0.2, yDataForLogistic);\n\n      let predictedConfirmedData = [];\n      let predictIndex = 0;\n      countryConfirmedData.forEach(function (data) {\n        //predictedConfirmedData.push(result.predict(predictIndex)[1]);\n        predictedConfirmedData.push(self.predict(predictIndex));\n        predictIndex++;\n      });\n\n      for(var i=0; i<100; i++){\n        predictedConfirmedData.push(self.predict(predictIndex + i));\n      }\n\n      mainChart.datasets.push({\n        label: data.CountryName,\n        backgroundColor: 'transparent',\n        borderColor: colorCode[index],\n        pointHoverBackgroundColor: '#fff',\n        borderWidth: 2,\n        data: countryConfirmedData,\n      });\n      mainChart.datasets.push({\n        label: 'Prediction',\n        backgroundColor: 'transparent',\n        borderColor: colorCode[index+1],\n        pointHoverBackgroundColor: '#fff',\n        borderWidth: 2,\n        data: predictedConfirmedData,\n      });\n      index++;\n    });\n\n    this.setState({\n      mainChart : mainChart,\n    });\n\n  }\n\n  train(epochs, alpha, data){\n      errors =[];\n      A = 0.0;\n      B = 0.0;\n      C = 0.0;\n\n      for (var i=0; i<epochs; i++){\n          var error;\n          let trainIndex = 0;\n          data.forEach(d=>{\n              var predY;\n              var func;\n              func = A*Math.pow(trainIndex, 1.85)/100+B*trainIndex/100+C;\n              predY = 1/(1+Math.exp(-func));\n              error = predY - d/this.state.maxConfirmed;\n\n              A = A + alpha*-error*predY*(1-predY)*Math.pow(trainIndex, 1.85)/100;\n              B = B + alpha*-error*predY*(1-predY)*trainIndex/100;\n              C = C + alpha*-error*predY*(1-predY)*1.0;\n\n              trainIndex++;\n              // errors.push({error:error, iteration:count});\n          })\n\n          errors.push({error:error, epoch:i});\n\n          //var accuracy = 1+Math.round(error*100)/100;\n\n          //var progresspercent = 100*i/500;\n      }\n  }\n\n  predict(x1){\n    var predY;\n    var func;\n    func = A*Math.pow(x1, 1.85)/100+B*x1/100+C;\n    predY = this.state.maxConfirmed/(1+Math.exp(-func));\n\n    return predY;\n  }\n\n  render() {\n\n    return (\n      <ThemeContextConsumer>\n        {context => (\n          <div className=\"animated fadeIn\">\n            <Row>\n              <Col>\n                <Card>\n                  <CardHeader>\n                    <FormGroup row>\n                      <Col md=\"4\">\n                        <Label htmlFor=\"countries\"><mark className=\"text-primary\"><strong><small>*Countries</small></strong></mark></Label>\n                        <Input disabled={this.state.inputs.selectedCountries.length > 0 ? true : false} type=\"select\" name=\"countries\" id=\"countries\" bsSize=\"sm\" value={this.state.inputs.selectedCountry} onChange={this.onCountryChange.bind(this, context)}>\n                          <option value=\"\">Please add a country</option>\n                          {\n                            context.countries.map((r , i) => <option key={i} value={r.Key}>{r.CountryName}</option>)\n                          }\n                        </Input>\n                      </Col>\n                    </FormGroup>\n                    <Row>\n                    {\n                      this.state.inputs.selectedCountries.map((r , i) =>\n                        <Alert className=\"mb-0 mr-1 pr-5\" key={r + i} color={i < 5 ? colorSet[i] : colorSet[4]} isOpen={true} toggle={this.onDismiss.bind(this, r, context)}>\n                          <div>{context.allDataObject[r].CountryName}</div>\n                        </Alert>\n                      )\n                    }\n                    </Row>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm=\"3\">\n                        <CardTitle className=\"mb-0\">Covid-19 Cases</CardTitle>\n                        <div className=\"small text-muted\">2020</div>\n                      </Col>\n                      <Col sm=\"3\">\n                        <FormGroup>\n                          <Label htmlFor=\"name\">Prediction Number</Label>\n                          <Input type=\"text\" id=\"maxConfirmed\" name=\"maxConfirmed\" value={this.state.maxConfirmed} placeholder=\"Enter max confirmed\" onChange={this.onMaxConfirmedChange.bind(this, context)} />\n                        </FormGroup>\n                      </Col>\n                      <Col sm=\"6\" className=\"d-none d-sm-inline-block\">\n                        <ButtonToolbar className=\"float-right\" aria-label=\"Toolbar with button groups\">\n                          <ButtonGroup className=\"mr-3\" aria-label=\"First group\">\n                            <Button className=\"text-dark\" color=\"outline-primary\" onClick={() => this.onRadioBtnClick(0, context)} active={this.state.radioSelected !== 0}>Normal</Button>\n                            <Button className=\"text-dark\" color=\"outline-primary\" onClick={() => this.onRadioBtnClick(1, context)} active={this.state.radioSelected !== 1}>MA</Button>\n                            <Button className=\"text-dark\" color=\"outline-primary\" onClick={() => this.onRadioBtnClick(2, context)} active={this.state.radioSelected !== 2}>EMA</Button>\n                            <Button className=\"text-dark\" color=\"outline-primary\" onClick={() => this.onRadioBtnClick(3, context)} active={this.state.radioSelected !== 3}>WMA</Button>\n                          </ButtonGroup>\n                        </ButtonToolbar>\n                      </Col>\n                    </Row>\n                    <div className=\"chart-wrapper\" style={{ height: 400 + 'px', marginTop: 20 + 'px' }}>\n                       {\n                         <Line data={this.state.mainChart} options={this.state.mainChartOpts} height={400} />\n                       }\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </ThemeContextConsumer>\n    );\n  }\n}\n\nexport default Cases;\n"],"sourceRoot":""}