{"version":3,"sources":["../node_modules/react-loader/lib/react-loader.js","../node_modules/spin.js/spin.js","../node_modules/create-react-class/index.js","../node_modules/create-react-class/factory.js","../node_modules/fbjs/lib/emptyObject.js","../node_modules/fbjs/lib/invariant.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__webpack_require__","undefined","React","ReactDOM","Spinner","PropTypes","createReactClass","hasCreateRef","createRef","propTypes","className","string","color","component","any","corners","number","direction","oneOf","fps","hwaccell","bool","left","length","lines","loaded","loadedClassName","opacity","options","object","parentClassName","position","radius","rotate","scale","shadow","speed","top","trail","width","zIndex","getDefaultProps","getInitialState","this","ref","componentDidMount","updateState","props","UNSAFE_componentWillReceiveProps","nextProps","componentWillUnmount","setState","state","allowedOptions","Object","keys","constructor","splice","indexOf","propsOrObjectOptions","forEach","key","spin","canUseDOM","window","document","createElement","target","spinner","current","findDOMNode","refs","loader","innerHTML","render","children","apply","exports","module","factory","useCssAnimations","sheet","prefixes","animations","createEl","tag","prop","n","el","ins","parent","i","arguments","appendChild","addAnimation","alpha","name","join","start","z","Math","max","prefix","substring","toLowerCase","pre","insertRule","cssRules","vendor","pp","s","style","charAt","toUpperCase","slice","css","merge","obj","def","getColor","idx","defaults","hwaccel","o","opts","prototype","stop","self","insertBefore","firstChild","setAttribute","f","ostep","astep","anim","j","timeout","setTimeout","clearTimeout","parentNode","removeChild","seg","fill","height","background","boxShadow","transformOrigin","transform","borderRadius","animation","val","childNodes","type","getElementsByTagName","styleSheet","probe","behavior","adj","vml","attr","addRule","r","grp","coordsize","coordorigin","margin","g","dx","filter","rotation","arcsize","c","initVML","call","Error","ReactNoopUpdateQueue","Component","updater","isValidElement","_assign","emptyObject","_invariant","MIXINS_KEY","ReactComponent","injectedMixins","ReactClassInterface","mixins","statics","contextTypes","childContextTypes","getChildContext","componentWillMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","UNSAFE_componentWillMount","UNSAFE_componentWillUpdate","updateComponent","ReactClassStaticInterface","getDerivedStateFromProps","RESERVED_SPEC_KEYS","displayName","Constructor","_displayName","_mixins","mixSpecIntoComponent","_childContextTypes","_contextTypes","_getDefaultProps","createMergedResultFunction","_propTypes","_statics","property","hasOwnProperty","isReserved","isAlreadyDefined","specPolicy","mixStaticSpecIntoComponent","autobind","validateMethodOverride","ReactClassMixin","spec","proto","autoBindPairs","__reactAutoBindPairs","isReactClassMethod","createChainedFunction","push","mergeIntoWithNoDuplicateKeys","one","two","a","b","bindAutoBindMethod","method","bind","IsMountedPreMixin","__isMounted","IsMountedPostMixin","replaceState","newState","callback","enqueueReplaceState","isMounted","ReactClassComponent","context","pairs","autoBindKey","bindAutoBindMethods","initialState","Array","isArray","methodName","defaultProps","validateFormat","format","condition","d","e","error","args","argIndex","replace","framesToPop"],"mappings":"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","file":"static/js/2.d77d95b3.chunk.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['react', 'react-dom', 'spin.js', 'prop-types', 'create-react-class'], factory);\n  } else if (typeof module === 'object' && typeof module.exports === 'object') {\n    module.exports = factory(require('react'), require('react-dom'), require('spin.js'), require('prop-types'), require('create-react-class'));\n  } else {\n    root.Loader = factory(root.React, root.ReactDOM, root.Spinner, root.PropTypes, root.createReactClass);\n  }\n})(this, function (React, ReactDOM, Spinner, PropTypes, createReactClass) {\n  var hasCreateRef = !!React.createRef;\n  var Loader = createReactClass({\n    propTypes: {\n      className: PropTypes.string,\n      color: PropTypes.string,\n      component: PropTypes.any,\n      corners: PropTypes.number,\n      direction: PropTypes.oneOf([1, -1]),\n      fps: PropTypes.number,\n      hwaccell: PropTypes.bool,\n      left: PropTypes.string,\n      length: PropTypes.number,\n      lines: PropTypes.number,\n      loaded: PropTypes.bool,\n      loadedClassName: PropTypes.string,\n      opacity: PropTypes.number,\n      options: PropTypes.object,\n      parentClassName: PropTypes.string,\n      position: PropTypes.string,\n      radius: PropTypes.number,\n      rotate: PropTypes.number,\n      scale: PropTypes.number,\n      shadow: PropTypes.bool,\n      speed: PropTypes.number,\n      top: PropTypes.string,\n      trail: PropTypes.number,\n      width: PropTypes.number,\n      zIndex: PropTypes.number\n    },\n    getDefaultProps: function getDefaultProps() {\n      return {\n        component: 'div',\n        loadedClassName: 'loadedContent',\n        parentClassName: 'loader'\n      };\n    },\n    getInitialState: function getInitialState() {\n      this.ref = hasCreateRef ? React.createRef() : 'loader';\n      return {\n        loaded: false,\n        options: {}\n      };\n    },\n    componentDidMount: function componentDidMount() {\n      this.updateState(this.props);\n    },\n    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n      this.updateState(nextProps);\n    },\n    componentWillUnmount: function componentWillUnmount() {\n      this.setState({\n        loaded: false\n      });\n    },\n    updateState: function updateState(props) {\n      props || (props = {});\n      var loaded = this.state.loaded;\n      var options = this.state.options; // update loaded state, if supplied\n\n      if ('loaded' in props) {\n        loaded = !!props.loaded;\n      } // update spinner options, if supplied\n\n\n      var allowedOptions = Object.keys(this.constructor.propTypes);\n      allowedOptions.splice(allowedOptions.indexOf('loaded'), 1);\n      allowedOptions.splice(allowedOptions.indexOf('options'), 1); // allows passing options as either props or as an option object\n\n      var propsOrObjectOptions = 'options' in props ? props.options : props;\n      allowedOptions.forEach(function (key) {\n        if (key in propsOrObjectOptions) {\n          options[key] = propsOrObjectOptions[key];\n        }\n      });\n      this.setState({\n        loaded: loaded,\n        options: options\n      }, this.spin);\n    },\n    spin: function spin() {\n      var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n      if (canUseDOM && !this.state.loaded) {\n        var spinner = new Spinner(this.state.options);\n        var target;\n\n        if (hasCreateRef) {\n          target = this.ref.current;\n        } else {\n          target = ReactDOM.findDOMNode(this.refs.loader);\n        } // clear out any other spinners from previous renders\n\n\n        target.innerHTML = '';\n        spinner.spin(target);\n      }\n    },\n    render: function render() {\n      var props, children;\n\n      if (this.state.loaded) {\n        props = {\n          key: 'content',\n          className: this.props.loadedClassName\n        };\n        children = this.props.children;\n      } else {\n        props = {\n          key: 'loader',\n          ref: this.ref,\n          className: this.props.parentClassName\n        };\n      }\n\n      return React.createElement(this.props.component, props, children);\n    }\n  });\n  return Loader;\n});","/**\n * Copyright (c) 2011-2014 Felix Gnass\n * Licensed under the MIT license\n * http://spin.js.org/\n *\n * Example:\n    var opts = {\n      lines: 12             // The number of lines to draw\n    , length: 7             // The length of each line\n    , width: 5              // The line thickness\n    , radius: 10            // The radius of the inner circle\n    , scale: 1.0            // Scales overall size of the spinner\n    , corners: 1            // Roundness (0..1)\n    , color: '#000'         // #rgb or #rrggbb\n    , opacity: 1/4          // Opacity of the lines\n    , rotate: 0             // Rotation offset\n    , direction: 1          // 1: clockwise, -1: counterclockwise\n    , speed: 1              // Rounds per second\n    , trail: 100            // Afterglow percentage\n    , fps: 20               // Frames per second when using setTimeout()\n    , zIndex: 2e9           // Use a high z-index by default\n    , className: 'spinner'  // CSS class to assign to the element\n    , top: '50%'            // center vertically\n    , left: '50%'           // center horizontally\n    , shadow: false         // Whether to render a shadow\n    , hwaccel: false        // Whether to use hardware acceleration (might be buggy)\n    , position: 'absolute'  // Element positioning\n    }\n    var target = document.getElementById('foo')\n    var spinner = new Spinner(opts).spin(target)\n */\n;\n\n(function (root, factory) {\n  /* CommonJS */\n  if (typeof module == 'object' && module.exports) module.exports = factory();\n  /* AMD module */\n  else if (typeof define == 'function' && define.amd) define(factory);\n    /* Browser global */\n    else root.Spinner = factory();\n})(this, function () {\n  \"use strict\";\n\n  var prefixes = ['webkit', 'Moz', 'ms', 'O']\n  /* Vendor prefixes */\n  ,\n      animations = {}\n  /* Animation rules keyed by their name */\n  ,\n      useCssAnimations\n  /* Whether to use CSS animations or setTimeout */\n  ,\n      sheet;\n  /* A stylesheet to hold the @keyframe or VML rules. */\n\n  /**\n   * Utility function to create elements. If no tag name is given,\n   * a DIV is created. Optionally properties can be passed.\n   */\n\n  function createEl(tag, prop) {\n    var el = document.createElement(tag || 'div'),\n        n;\n\n    for (n in prop) {\n      el[n] = prop[n];\n    }\n\n    return el;\n  }\n  /**\n   * Appends children and returns the parent.\n   */\n\n\n  function ins(parent\n  /* child1, child2, ...*/\n  ) {\n    for (var i = 1, n = arguments.length; i < n; i++) {\n      parent.appendChild(arguments[i]);\n    }\n\n    return parent;\n  }\n  /**\n   * Creates an opacity keyframe animation rule and returns its name.\n   * Since most mobile Webkits have timing issues with animation-delay,\n   * we create separate rules for each line/segment.\n   */\n\n\n  function addAnimation(alpha, trail, i, lines) {\n    var name = ['opacity', trail, ~~(alpha * 100), i, lines].join('-'),\n        start = 0.01 + i / lines * 100,\n        z = Math.max(1 - (1 - alpha) / trail * (100 - start), alpha),\n        prefix = useCssAnimations.substring(0, useCssAnimations.indexOf('Animation')).toLowerCase(),\n        pre = prefix && '-' + prefix + '-' || '';\n\n    if (!animations[name]) {\n      sheet.insertRule('@' + pre + 'keyframes ' + name + '{' + '0%{opacity:' + z + '}' + start + '%{opacity:' + alpha + '}' + (start + 0.01) + '%{opacity:1}' + (start + trail) % 100 + '%{opacity:' + alpha + '}' + '100%{opacity:' + z + '}' + '}', sheet.cssRules.length);\n      animations[name] = 1;\n    }\n\n    return name;\n  }\n  /**\n   * Tries various vendor prefixes and returns the first supported property.\n   */\n\n\n  function vendor(el, prop) {\n    var s = el.style,\n        pp,\n        i;\n    prop = prop.charAt(0).toUpperCase() + prop.slice(1);\n    if (s[prop] !== undefined) return prop;\n\n    for (i = 0; i < prefixes.length; i++) {\n      pp = prefixes[i] + prop;\n      if (s[pp] !== undefined) return pp;\n    }\n  }\n  /**\n   * Sets multiple style properties at once.\n   */\n\n\n  function css(el, prop) {\n    for (var n in prop) {\n      el.style[vendor(el, n) || n] = prop[n];\n    }\n\n    return el;\n  }\n  /**\n   * Fills in default values.\n   */\n\n\n  function merge(obj) {\n    for (var i = 1; i < arguments.length; i++) {\n      var def = arguments[i];\n\n      for (var n in def) {\n        if (obj[n] === undefined) obj[n] = def[n];\n      }\n    }\n\n    return obj;\n  }\n  /**\n   * Returns the line color from the given string or array.\n   */\n\n\n  function getColor(color, idx) {\n    return typeof color == 'string' ? color : color[idx % color.length];\n  } // Built-in defaults\n\n\n  var defaults = {\n    lines: 12 // The number of lines to draw\n    ,\n    length: 7 // The length of each line\n    ,\n    width: 5 // The line thickness\n    ,\n    radius: 10 // The radius of the inner circle\n    ,\n    scale: 1.0 // Scales overall size of the spinner\n    ,\n    corners: 1 // Roundness (0..1)\n    ,\n    color: '#000' // #rgb or #rrggbb\n    ,\n    opacity: 1 / 4 // Opacity of the lines\n    ,\n    rotate: 0 // Rotation offset\n    ,\n    direction: 1 // 1: clockwise, -1: counterclockwise\n    ,\n    speed: 1 // Rounds per second\n    ,\n    trail: 100 // Afterglow percentage\n    ,\n    fps: 20 // Frames per second when using setTimeout()\n    ,\n    zIndex: 2e9 // Use a high z-index by default\n    ,\n    className: 'spinner' // CSS class to assign to the element\n    ,\n    top: '50%' // center vertically\n    ,\n    left: '50%' // center horizontally\n    ,\n    shadow: false // Whether to render a shadow\n    ,\n    hwaccel: false // Whether to use hardware acceleration (might be buggy)\n    ,\n    position: 'absolute' // Element positioning\n\n  };\n  /** The constructor */\n\n  function Spinner(o) {\n    this.opts = merge(o || {}, Spinner.defaults, defaults);\n  } // Global defaults that override the built-ins:\n\n\n  Spinner.defaults = {};\n  merge(Spinner.prototype, {\n    /**\n     * Adds the spinner to the given target element. If this instance is already\n     * spinning, it is automatically removed from its previous target b calling\n     * stop() internally.\n     */\n    spin: function spin(target) {\n      this.stop();\n      var self = this,\n          o = self.opts,\n          el = self.el = createEl(null, {\n        className: o.className\n      });\n      css(el, {\n        position: o.position,\n        width: 0,\n        zIndex: o.zIndex,\n        left: o.left,\n        top: o.top\n      });\n\n      if (target) {\n        target.insertBefore(el, target.firstChild || null);\n      }\n\n      el.setAttribute('role', 'progressbar');\n      self.lines(el, self.opts);\n\n      if (!useCssAnimations) {\n        // No CSS animation support, use setTimeout() instead\n        var i = 0,\n            start = (o.lines - 1) * (1 - o.direction) / 2,\n            alpha,\n            fps = o.fps,\n            f = fps / o.speed,\n            ostep = (1 - o.opacity) / (f * o.trail / 100),\n            astep = f / o.lines;\n\n        (function anim() {\n          i++;\n\n          for (var j = 0; j < o.lines; j++) {\n            alpha = Math.max(1 - (i + (o.lines - j) * astep) % f * ostep, o.opacity);\n            self.opacity(el, j * o.direction + start, alpha, o);\n          }\n\n          self.timeout = self.el && setTimeout(anim, ~~(1000 / fps));\n        })();\n      }\n\n      return self;\n    }\n    /**\n     * Stops and removes the Spinner.\n     */\n    ,\n    stop: function stop() {\n      var el = this.el;\n\n      if (el) {\n        clearTimeout(this.timeout);\n        if (el.parentNode) el.parentNode.removeChild(el);\n        this.el = undefined;\n      }\n\n      return this;\n    }\n    /**\n     * Internal method that draws the individual lines. Will be overwritten\n     * in VML fallback mode below.\n     */\n    ,\n    lines: function lines(el, o) {\n      var i = 0,\n          start = (o.lines - 1) * (1 - o.direction) / 2,\n          seg;\n\n      function fill(color, shadow) {\n        return css(createEl(), {\n          position: 'absolute',\n          width: o.scale * (o.length + o.width) + 'px',\n          height: o.scale * o.width + 'px',\n          background: color,\n          boxShadow: shadow,\n          transformOrigin: 'left',\n          transform: 'rotate(' + ~~(360 / o.lines * i + o.rotate) + 'deg) translate(' + o.scale * o.radius + 'px' + ',0)',\n          borderRadius: (o.corners * o.scale * o.width >> 1) + 'px'\n        });\n      }\n\n      for (; i < o.lines; i++) {\n        seg = css(createEl(), {\n          position: 'absolute',\n          top: 1 + ~(o.scale * o.width / 2) + 'px',\n          transform: o.hwaccel ? 'translate3d(0,0,0)' : '',\n          opacity: o.opacity,\n          animation: useCssAnimations && addAnimation(o.opacity, o.trail, start + i * o.direction, o.lines) + ' ' + 1 / o.speed + 's linear infinite'\n        });\n        if (o.shadow) ins(seg, css(fill('#000', '0 0 4px #000'), {\n          top: '2px'\n        }));\n        ins(el, ins(seg, fill(getColor(o.color, i), '0 0 1px rgba(0,0,0,.1)')));\n      }\n\n      return el;\n    }\n    /**\n     * Internal method that adjusts the opacity of a single line.\n     * Will be overwritten in VML fallback mode below.\n     */\n    ,\n    opacity: function opacity(el, i, val) {\n      if (i < el.childNodes.length) el.childNodes[i].style.opacity = val;\n    }\n  });\n\n  function initVML() {\n    /* Utility function to create a VML tag */\n    function vml(tag, attr) {\n      return createEl('<' + tag + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">', attr);\n    } // No CSS transforms but VML support, add a CSS rule for VML elements:\n\n\n    sheet.addRule('.spin-vml', 'behavior:url(#default#VML)');\n\n    Spinner.prototype.lines = function (el, o) {\n      var r = o.scale * (o.length + o.width),\n          s = o.scale * 2 * r;\n\n      function grp() {\n        return css(vml('group', {\n          coordsize: s + ' ' + s,\n          coordorigin: -r + ' ' + -r\n        }), {\n          width: s,\n          height: s\n        });\n      }\n\n      var margin = -(o.width + o.length) * o.scale * 2 + 'px',\n          g = css(grp(), {\n        position: 'absolute',\n        top: margin,\n        left: margin\n      }),\n          i;\n\n      function seg(i, dx, filter) {\n        ins(g, ins(css(grp(), {\n          rotation: 360 / o.lines * i + 'deg',\n          left: ~~dx\n        }), ins(css(vml('roundrect', {\n          arcsize: o.corners\n        }), {\n          width: r,\n          height: o.scale * o.width,\n          left: o.scale * o.radius,\n          top: -o.scale * o.width >> 1,\n          filter: filter\n        }), vml('fill', {\n          color: getColor(o.color, i),\n          opacity: o.opacity\n        }), vml('stroke', {\n          opacity: 0\n        }) // transparent stroke to fix color bleeding upon opacity change\n        )));\n      }\n\n      if (o.shadow) for (i = 1; i <= o.lines; i++) {\n        seg(i, -2, 'progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)');\n      }\n\n      for (i = 1; i <= o.lines; i++) {\n        seg(i);\n      }\n\n      return ins(el, g);\n    };\n\n    Spinner.prototype.opacity = function (el, i, val, o) {\n      var c = el.firstChild;\n      o = o.shadow && o.lines || 0;\n\n      if (c && i + o < c.childNodes.length) {\n        c = c.childNodes[i + o];\n        c = c && c.firstChild;\n        c = c && c.firstChild;\n        if (c) c.opacity = val;\n      }\n    };\n  }\n\n  if (typeof document !== 'undefined') {\n    sheet = function () {\n      var el = createEl('style', {\n        type: 'text/css'\n      });\n      ins(document.getElementsByTagName('head')[0], el);\n      return el.sheet || el.styleSheet;\n    }();\n\n    var probe = css(createEl('group'), {\n      behavior: 'url(#default#VML)'\n    });\n    if (!vendor(probe, 'transform') && probe.adj) initVML();else useCssAnimations = vendor(probe, 'animation');\n  }\n\n  return Spinner;\n});","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar React = require('react');\n\nvar factory = require('./factory');\n\nif (typeof React === 'undefined') {\n  throw Error('create-react-class could not find the React object. If you are using script tags, ' + 'make sure that React is being loaded before create-react-class.');\n} // Hack to grab NoopUpdateQueue from isomorphic React\n\n\nvar ReactNoopUpdateQueue = new React.Component().updater;\nmodule.exports = factory(React.Component, React.isValidElement, ReactNoopUpdateQueue);","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar emptyObject = require('fbjs/lib/emptyObject');\n\nvar _invariant = require('fbjs/lib/invariant');\n\nif (process.env.NODE_ENV !== 'production') {\n  var warning = require('fbjs/lib/warning');\n}\n\nvar MIXINS_KEY = 'mixins'; // Helper function to allow the creation of anonymous functions which do not\n// have .name set to the name of the variable being assigned to.\n\nfunction identity(fn) {\n  return fn;\n}\n\nvar ReactPropTypeLocationNames;\n\nif (process.env.NODE_ENV !== 'production') {\n  ReactPropTypeLocationNames = {\n    prop: 'prop',\n    context: 'context',\n    childContext: 'child context'\n  };\n} else {\n  ReactPropTypeLocationNames = {};\n}\n\nfunction factory(ReactComponent, isValidElement, ReactNoopUpdateQueue) {\n  /**\n   * Policies that describe methods in `ReactClassInterface`.\n   */\n  var injectedMixins = [];\n  /**\n   * Composite components are higher-level components that compose other composite\n   * or host components.\n   *\n   * To create a new type of `ReactClass`, pass a specification of\n   * your new class to `React.createClass`. The only requirement of your class\n   * specification is that you implement a `render` method.\n   *\n   *   var MyComponent = React.createClass({\n   *     render: function() {\n   *       return <div>Hello World</div>;\n   *     }\n   *   });\n   *\n   * The class specification supports a specific protocol of methods that have\n   * special meaning (e.g. `render`). See `ReactClassInterface` for\n   * more the comprehensive protocol. Any other properties and methods in the\n   * class specification will be available on the prototype.\n   *\n   * @interface ReactClassInterface\n   * @internal\n   */\n\n  var ReactClassInterface = {\n    /**\n     * An array of Mixin objects to include when defining your component.\n     *\n     * @type {array}\n     * @optional\n     */\n    mixins: 'DEFINE_MANY',\n\n    /**\n     * An object containing properties and methods that should be defined on\n     * the component's constructor instead of its prototype (static methods).\n     *\n     * @type {object}\n     * @optional\n     */\n    statics: 'DEFINE_MANY',\n\n    /**\n     * Definition of prop types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    propTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types for this component.\n     *\n     * @type {object}\n     * @optional\n     */\n    contextTypes: 'DEFINE_MANY',\n\n    /**\n     * Definition of context types this component sets for its children.\n     *\n     * @type {object}\n     * @optional\n     */\n    childContextTypes: 'DEFINE_MANY',\n    // ==== Definition methods ====\n\n    /**\n     * Invoked when the component is mounted. Values in the mapping will be set on\n     * `this.props` if that prop is not specified (i.e. using an `in` check).\n     *\n     * This method is invoked before `getInitialState` and therefore cannot rely\n     * on `this.state` or use `this.setState`.\n     *\n     * @return {object}\n     * @optional\n     */\n    getDefaultProps: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Invoked once before the component is mounted. The return value will be used\n     * as the initial value of `this.state`.\n     *\n     *   getInitialState: function() {\n     *     return {\n     *       isOn: false,\n     *       fooBaz: new BazFoo()\n     *     }\n     *   }\n     *\n     * @return {object}\n     * @optional\n     */\n    getInitialState: 'DEFINE_MANY_MERGED',\n\n    /**\n     * @return {object}\n     * @optional\n     */\n    getChildContext: 'DEFINE_MANY_MERGED',\n\n    /**\n     * Uses props from `this.props` and state from `this.state` to render the\n     * structure of the component.\n     *\n     * No guarantees are made about when or how often this method is invoked, so\n     * it must not have side effects.\n     *\n     *   render: function() {\n     *     var name = this.props.name;\n     *     return <div>Hello, {name}!</div>;\n     *   }\n     *\n     * @return {ReactComponent}\n     * @required\n     */\n    render: 'DEFINE_ONCE',\n    // ==== Delegate methods ====\n\n    /**\n     * Invoked when the component is initially created and about to be mounted.\n     * This may have side effects, but any external subscriptions or data created\n     * by this method must be cleaned up in `componentWillUnmount`.\n     *\n     * @optional\n     */\n    componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component has been mounted and has a DOM representation.\n     * However, there is no guarantee that the DOM node is in the document.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been mounted (initialized and rendered) for the first time.\n     *\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidMount: 'DEFINE_MANY',\n\n    /**\n     * Invoked before the component receives new props.\n     *\n     * Use this as an opportunity to react to a prop transition by updating the\n     * state using `this.setState`. Current props are accessed via `this.props`.\n     *\n     *   componentWillReceiveProps: function(nextProps, nextContext) {\n     *     this.setState({\n     *       likesIncreasing: nextProps.likeCount > this.props.likeCount\n     *     });\n     *   }\n     *\n     * NOTE: There is no equivalent `componentWillReceiveState`. An incoming prop\n     * transition may cause a state change, but the opposite is not true. If you\n     * need it, you are probably looking for `componentWillUpdate`.\n     *\n     * @param {object} nextProps\n     * @optional\n     */\n    componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Invoked while deciding if the component should be updated as a result of\n     * receiving new props, state and/or context.\n     *\n     * Use this as an opportunity to `return false` when you're certain that the\n     * transition to the new props/state/context will not require a component\n     * update.\n     *\n     *   shouldComponentUpdate: function(nextProps, nextState, nextContext) {\n     *     return !equal(nextProps, this.props) ||\n     *       !equal(nextState, this.state) ||\n     *       !equal(nextContext, this.context);\n     *   }\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @return {boolean} True if the component should update.\n     * @optional\n     */\n    shouldComponentUpdate: 'DEFINE_ONCE',\n\n    /**\n     * Invoked when the component is about to update due to a transition from\n     * `this.props`, `this.state` and `this.context` to `nextProps`, `nextState`\n     * and `nextContext`.\n     *\n     * Use this as an opportunity to perform preparation before an update occurs.\n     *\n     * NOTE: You **cannot** use `this.setState()` in this method.\n     *\n     * @param {object} nextProps\n     * @param {?object} nextState\n     * @param {?object} nextContext\n     * @param {ReactReconcileTransaction} transaction\n     * @optional\n     */\n    componentWillUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component's DOM representation has been updated.\n     *\n     * Use this as an opportunity to operate on the DOM when the component has\n     * been updated.\n     *\n     * @param {object} prevProps\n     * @param {?object} prevState\n     * @param {?object} prevContext\n     * @param {DOMElement} rootNode DOM element representing the component.\n     * @optional\n     */\n    componentDidUpdate: 'DEFINE_MANY',\n\n    /**\n     * Invoked when the component is about to be removed from its parent and have\n     * its DOM representation destroyed.\n     *\n     * Use this as an opportunity to deallocate any external resources.\n     *\n     * NOTE: There is no `componentDidUnmount` since your component will have been\n     * destroyed by that point.\n     *\n     * @optional\n     */\n    componentWillUnmount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillMount`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillMount: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillReceiveProps`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillReceiveProps: 'DEFINE_MANY',\n\n    /**\n     * Replacement for (deprecated) `componentWillUpdate`.\n     *\n     * @optional\n     */\n    UNSAFE_componentWillUpdate: 'DEFINE_MANY',\n    // ==== Advanced methods ====\n\n    /**\n     * Updates the component's currently mounted DOM representation.\n     *\n     * By default, this implements React's rendering and reconciliation algorithm.\n     * Sophisticated clients may wish to override this.\n     *\n     * @param {ReactReconcileTransaction} transaction\n     * @internal\n     * @overridable\n     */\n    updateComponent: 'OVERRIDE_BASE'\n  };\n  /**\n   * Similar to ReactClassInterface but for static methods.\n   */\n\n  var ReactClassStaticInterface = {\n    /**\n     * This method is invoked after a component is instantiated and when it\n     * receives new props. Return an object to update state in response to\n     * prop changes. Return null to indicate no change to state.\n     *\n     * If an object is returned, its keys will be merged into the existing state.\n     *\n     * @return {object || null}\n     * @optional\n     */\n    getDerivedStateFromProps: 'DEFINE_MANY_MERGED'\n  };\n  /**\n   * Mapping from class specification keys to special processing functions.\n   *\n   * Although these are declared like instance properties in the specification\n   * when defining classes using `React.createClass`, they are actually static\n   * and are accessible on the constructor instead of the prototype. Despite\n   * being static, they must be defined outside of the \"statics\" key under\n   * which all other static methods are defined.\n   */\n\n  var RESERVED_SPEC_KEYS = {\n    displayName: function displayName(Constructor, _displayName) {\n      Constructor.displayName = _displayName;\n    },\n    mixins: function mixins(Constructor, _mixins) {\n      if (_mixins) {\n        for (var i = 0; i < _mixins.length; i++) {\n          mixSpecIntoComponent(Constructor, _mixins[i]);\n        }\n      }\n    },\n    childContextTypes: function childContextTypes(Constructor, _childContextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, _childContextTypes, 'childContext');\n      }\n\n      Constructor.childContextTypes = _assign({}, Constructor.childContextTypes, _childContextTypes);\n    },\n    contextTypes: function contextTypes(Constructor, _contextTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, _contextTypes, 'context');\n      }\n\n      Constructor.contextTypes = _assign({}, Constructor.contextTypes, _contextTypes);\n    },\n\n    /**\n     * Special case getDefaultProps which should move into statics but requires\n     * automatic merging.\n     */\n    getDefaultProps: function getDefaultProps(Constructor, _getDefaultProps) {\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps = createMergedResultFunction(Constructor.getDefaultProps, _getDefaultProps);\n      } else {\n        Constructor.getDefaultProps = _getDefaultProps;\n      }\n    },\n    propTypes: function propTypes(Constructor, _propTypes) {\n      if (process.env.NODE_ENV !== 'production') {\n        validateTypeDef(Constructor, _propTypes, 'prop');\n      }\n\n      Constructor.propTypes = _assign({}, Constructor.propTypes, _propTypes);\n    },\n    statics: function statics(Constructor, _statics) {\n      mixStaticSpecIntoComponent(Constructor, _statics);\n    },\n    autobind: function autobind() {}\n  };\n\n  function validateTypeDef(Constructor, typeDef, location) {\n    for (var propName in typeDef) {\n      if (typeDef.hasOwnProperty(propName)) {\n        // use a warning instead of an _invariant so components\n        // don't show up in prod but only in __DEV__\n        if (process.env.NODE_ENV !== 'production') {\n          warning(typeof typeDef[propName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'React.PropTypes.', Constructor.displayName || 'ReactClass', ReactPropTypeLocationNames[location], propName);\n        }\n      }\n    }\n  }\n\n  function validateMethodOverride(isAlreadyDefined, name) {\n    var specPolicy = ReactClassInterface.hasOwnProperty(name) ? ReactClassInterface[name] : null; // Disallow overriding of base class methods unless explicitly allowed.\n\n    if (ReactClassMixin.hasOwnProperty(name)) {\n      _invariant(specPolicy === 'OVERRIDE_BASE', 'ReactClassInterface: You are attempting to override ' + '`%s` from your class specification. Ensure that your method names ' + 'do not overlap with React methods.', name);\n    } // Disallow defining methods more than once unless explicitly allowed.\n\n\n    if (isAlreadyDefined) {\n      _invariant(specPolicy === 'DEFINE_MANY' || specPolicy === 'DEFINE_MANY_MERGED', 'ReactClassInterface: You are attempting to define ' + '`%s` on your component more than once. This conflict may be due ' + 'to a mixin.', name);\n    }\n  }\n  /**\n   * Mixin helper which handles policy validation and reserved\n   * specification keys when building React classes.\n   */\n\n\n  function mixSpecIntoComponent(Constructor, spec) {\n    if (!spec) {\n      if (process.env.NODE_ENV !== 'production') {\n        var typeofSpec = typeof spec;\n        var isMixinValid = typeofSpec === 'object' && spec !== null;\n\n        if (process.env.NODE_ENV !== 'production') {\n          warning(isMixinValid, \"%s: You're attempting to include a mixin that is either null \" + 'or not an object. Check the mixins included by the component, ' + 'as well as any mixins they include themselves. ' + 'Expected object but got %s.', Constructor.displayName || 'ReactClass', spec === null ? null : typeofSpec);\n        }\n      }\n\n      return;\n    }\n\n    _invariant(typeof spec !== 'function', \"ReactClass: You're attempting to \" + 'use a component class or function as a mixin. Instead, just use a ' + 'regular object.');\n\n    _invariant(!isValidElement(spec), \"ReactClass: You're attempting to \" + 'use a component as a mixin. Instead, just use a regular object.');\n\n    var proto = Constructor.prototype;\n    var autoBindPairs = proto.__reactAutoBindPairs; // By handling mixins before any other properties, we ensure the same\n    // chaining order is applied to methods with DEFINE_MANY policy, whether\n    // mixins are listed before or after these methods in the spec.\n\n    if (spec.hasOwnProperty(MIXINS_KEY)) {\n      RESERVED_SPEC_KEYS.mixins(Constructor, spec.mixins);\n    }\n\n    for (var name in spec) {\n      if (!spec.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (name === MIXINS_KEY) {\n        // We have already handled mixins in a special case above.\n        continue;\n      }\n\n      var property = spec[name];\n      var isAlreadyDefined = proto.hasOwnProperty(name);\n      validateMethodOverride(isAlreadyDefined, name);\n\n      if (RESERVED_SPEC_KEYS.hasOwnProperty(name)) {\n        RESERVED_SPEC_KEYS[name](Constructor, property);\n      } else {\n        // Setup methods on prototype:\n        // The following member methods should not be automatically bound:\n        // 1. Expected ReactClass methods (in the \"interface\").\n        // 2. Overridden methods (that were mixed in).\n        var isReactClassMethod = ReactClassInterface.hasOwnProperty(name);\n        var isFunction = typeof property === 'function';\n        var shouldAutoBind = isFunction && !isReactClassMethod && !isAlreadyDefined && spec.autobind !== false;\n\n        if (shouldAutoBind) {\n          autoBindPairs.push(name, property);\n          proto[name] = property;\n        } else {\n          if (isAlreadyDefined) {\n            var specPolicy = ReactClassInterface[name]; // These cases should already be caught by validateMethodOverride.\n\n            _invariant(isReactClassMethod && (specPolicy === 'DEFINE_MANY_MERGED' || specPolicy === 'DEFINE_MANY'), 'ReactClass: Unexpected spec policy %s for key %s ' + 'when mixing in component specs.', specPolicy, name); // For methods which are defined more than once, call the existing\n            // methods before calling the new property, merging if appropriate.\n\n\n            if (specPolicy === 'DEFINE_MANY_MERGED') {\n              proto[name] = createMergedResultFunction(proto[name], property);\n            } else if (specPolicy === 'DEFINE_MANY') {\n              proto[name] = createChainedFunction(proto[name], property);\n            }\n          } else {\n            proto[name] = property;\n\n            if (process.env.NODE_ENV !== 'production') {\n              // Add verbose displayName to the function, which helps when looking\n              // at profiling tools.\n              if (typeof property === 'function' && spec.displayName) {\n                proto[name].displayName = spec.displayName + '_' + name;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function mixStaticSpecIntoComponent(Constructor, statics) {\n    if (!statics) {\n      return;\n    }\n\n    for (var name in statics) {\n      var property = statics[name];\n\n      if (!statics.hasOwnProperty(name)) {\n        continue;\n      }\n\n      var isReserved = (name in RESERVED_SPEC_KEYS);\n\n      _invariant(!isReserved, 'ReactClass: You are attempting to define a reserved ' + 'property, `%s`, that shouldn\\'t be on the \"statics\" key. Define it ' + 'as an instance property instead; it will still be accessible on the ' + 'constructor.', name);\n\n      var isAlreadyDefined = (name in Constructor);\n\n      if (isAlreadyDefined) {\n        var specPolicy = ReactClassStaticInterface.hasOwnProperty(name) ? ReactClassStaticInterface[name] : null;\n\n        _invariant(specPolicy === 'DEFINE_MANY_MERGED', 'ReactClass: You are attempting to define ' + '`%s` on your component more than once. This conflict may be ' + 'due to a mixin.', name);\n\n        Constructor[name] = createMergedResultFunction(Constructor[name], property);\n        return;\n      }\n\n      Constructor[name] = property;\n    }\n  }\n  /**\n   * Merge two objects, but throw if both contain the same key.\n   *\n   * @param {object} one The first object, which is mutated.\n   * @param {object} two The second object\n   * @return {object} one after it has been mutated to contain everything in two.\n   */\n\n\n  function mergeIntoWithNoDuplicateKeys(one, two) {\n    _invariant(one && two && typeof one === 'object' && typeof two === 'object', 'mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects.');\n\n    for (var key in two) {\n      if (two.hasOwnProperty(key)) {\n        _invariant(one[key] === undefined, 'mergeIntoWithNoDuplicateKeys(): ' + 'Tried to merge two objects with the same key: `%s`. This conflict ' + 'may be due to a mixin; in particular, this may be caused by two ' + 'getInitialState() or getDefaultProps() methods returning objects ' + 'with clashing keys.', key);\n\n        one[key] = two[key];\n      }\n    }\n\n    return one;\n  }\n  /**\n   * Creates a function that invokes two functions and merges their return values.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n\n\n  function createMergedResultFunction(one, two) {\n    return function mergedResult() {\n      var a = one.apply(this, arguments);\n      var b = two.apply(this, arguments);\n\n      if (a == null) {\n        return b;\n      } else if (b == null) {\n        return a;\n      }\n\n      var c = {};\n      mergeIntoWithNoDuplicateKeys(c, a);\n      mergeIntoWithNoDuplicateKeys(c, b);\n      return c;\n    };\n  }\n  /**\n   * Creates a function that invokes two functions and ignores their return vales.\n   *\n   * @param {function} one Function to invoke first.\n   * @param {function} two Function to invoke second.\n   * @return {function} Function that invokes the two argument functions.\n   * @private\n   */\n\n\n  function createChainedFunction(one, two) {\n    return function chainedFunction() {\n      one.apply(this, arguments);\n      two.apply(this, arguments);\n    };\n  }\n  /**\n   * Binds a method to the component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   * @param {function} method Method to be bound.\n   * @return {function} The bound method.\n   */\n\n\n  function bindAutoBindMethod(component, method) {\n    var boundMethod = method.bind(component);\n\n    if (process.env.NODE_ENV !== 'production') {\n      boundMethod.__reactBoundContext = component;\n      boundMethod.__reactBoundMethod = method;\n      boundMethod.__reactBoundArguments = null;\n      var componentName = component.constructor.displayName;\n      var _bind = boundMethod.bind;\n\n      boundMethod.bind = function (newThis) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        } // User is trying to bind() an autobound method; we effectively will\n        // ignore the value of \"this\" that the user is trying to use, so\n        // let's warn.\n\n\n        if (newThis !== component && newThis !== null) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(false, 'bind(): React component methods may only be bound to the ' + 'component instance. See %s', componentName);\n          }\n        } else if (!args.length) {\n          if (process.env.NODE_ENV !== 'production') {\n            warning(false, 'bind(): You are binding a component method to the component. ' + 'React does this for you automatically in a high-performance ' + 'way, so you can safely remove this call. See %s', componentName);\n          }\n\n          return boundMethod;\n        }\n\n        var reboundMethod = _bind.apply(boundMethod, arguments);\n\n        reboundMethod.__reactBoundContext = component;\n        reboundMethod.__reactBoundMethod = method;\n        reboundMethod.__reactBoundArguments = args;\n        return reboundMethod;\n      };\n    }\n\n    return boundMethod;\n  }\n  /**\n   * Binds all auto-bound methods in a component.\n   *\n   * @param {object} component Component whose method is going to be bound.\n   */\n\n\n  function bindAutoBindMethods(component) {\n    var pairs = component.__reactAutoBindPairs;\n\n    for (var i = 0; i < pairs.length; i += 2) {\n      var autoBindKey = pairs[i];\n      var method = pairs[i + 1];\n      component[autoBindKey] = bindAutoBindMethod(component, method);\n    }\n  }\n\n  var IsMountedPreMixin = {\n    componentDidMount: function componentDidMount() {\n      this.__isMounted = true;\n    }\n  };\n  var IsMountedPostMixin = {\n    componentWillUnmount: function componentWillUnmount() {\n      this.__isMounted = false;\n    }\n  };\n  /**\n   * Add more to the ReactClass base class. These are all legacy features and\n   * therefore not already part of the modern ReactComponent.\n   */\n\n  var ReactClassMixin = {\n    /**\n     * TODO: This will be deprecated because state should always keep a consistent\n     * type signature and the only use case for this, is to avoid that.\n     */\n    replaceState: function replaceState(newState, callback) {\n      this.updater.enqueueReplaceState(this, newState, callback);\n    },\n\n    /**\n     * Checks whether or not this composite component is mounted.\n     * @return {boolean} True if mounted, false otherwise.\n     * @protected\n     * @final\n     */\n    isMounted: function isMounted() {\n      if (process.env.NODE_ENV !== 'production') {\n        warning(this.__didWarnIsMounted, '%s: isMounted is deprecated. Instead, make sure to clean up ' + 'subscriptions and pending requests in componentWillUnmount to ' + 'prevent memory leaks.', this.constructor && this.constructor.displayName || this.name || 'Component');\n        this.__didWarnIsMounted = true;\n      }\n\n      return !!this.__isMounted;\n    }\n  };\n\n  var ReactClassComponent = function ReactClassComponent() {};\n\n  _assign(ReactClassComponent.prototype, ReactComponent.prototype, ReactClassMixin);\n  /**\n   * Creates a composite component class given a class specification.\n   * See https://facebook.github.io/react/docs/top-level-api.html#react.createclass\n   *\n   * @param {object} spec Class specification (which must define `render`).\n   * @return {function} Component constructor function.\n   * @public\n   */\n\n\n  function createClass(spec) {\n    // To keep our warnings more understandable, we'll use a little hack here to\n    // ensure that Constructor.name !== 'Constructor'. This makes sure we don't\n    // unnecessarily identify a class without displayName as 'Constructor'.\n    var Constructor = identity(function (props, context, updater) {\n      // This constructor gets overridden by mocks. The argument is used\n      // by mocks to assert on what gets mounted.\n      if (process.env.NODE_ENV !== 'production') {\n        warning(this instanceof Constructor, 'Something is calling a React component directly. Use a factory or ' + 'JSX instead. See: https://fb.me/react-legacyfactory');\n      } // Wire up auto-binding\n\n\n      if (this.__reactAutoBindPairs.length) {\n        bindAutoBindMethods(this);\n      }\n\n      this.props = props;\n      this.context = context;\n      this.refs = emptyObject;\n      this.updater = updater || ReactNoopUpdateQueue;\n      this.state = null; // ReactClasses doesn't have constructors. Instead, they use the\n      // getInitialState and componentWillMount methods for initialization.\n\n      var initialState = this.getInitialState ? this.getInitialState() : null;\n\n      if (process.env.NODE_ENV !== 'production') {\n        // We allow auto-mocks to proceed as if they're returning null.\n        if (initialState === undefined && this.getInitialState._isMockFunction) {\n          // This is probably bad practice. Consider warning here and\n          // deprecating this convenience.\n          initialState = null;\n        }\n      }\n\n      _invariant(typeof initialState === 'object' && !Array.isArray(initialState), '%s.getInitialState(): must return an object or null', Constructor.displayName || 'ReactCompositeComponent');\n\n      this.state = initialState;\n    });\n    Constructor.prototype = new ReactClassComponent();\n    Constructor.prototype.constructor = Constructor;\n    Constructor.prototype.__reactAutoBindPairs = [];\n    injectedMixins.forEach(mixSpecIntoComponent.bind(null, Constructor));\n    mixSpecIntoComponent(Constructor, IsMountedPreMixin);\n    mixSpecIntoComponent(Constructor, spec);\n    mixSpecIntoComponent(Constructor, IsMountedPostMixin); // Initialize the defaultProps property after all mixins have been merged.\n\n    if (Constructor.getDefaultProps) {\n      Constructor.defaultProps = Constructor.getDefaultProps();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This is a tag to indicate that the use of these method names is ok,\n      // since it's used with createClass. If it's not, then it's likely a\n      // mistake so we'll warn you to use the static property, property\n      // initializer or constructor respectively.\n      if (Constructor.getDefaultProps) {\n        Constructor.getDefaultProps.isReactClassApproved = {};\n      }\n\n      if (Constructor.prototype.getInitialState) {\n        Constructor.prototype.getInitialState.isReactClassApproved = {};\n      }\n    }\n\n    _invariant(Constructor.prototype.render, 'createClass(...): Class specification must implement a `render` method.');\n\n    if (process.env.NODE_ENV !== 'production') {\n      warning(!Constructor.prototype.componentShouldUpdate, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', spec.displayName || 'A component');\n      warning(!Constructor.prototype.componentWillRecieveProps, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', spec.displayName || 'A component');\n      warning(!Constructor.prototype.UNSAFE_componentWillRecieveProps, '%s has a method called UNSAFE_componentWillRecieveProps(). ' + 'Did you mean UNSAFE_componentWillReceiveProps()?', spec.displayName || 'A component');\n    } // Reduce time spent doing lookups by setting these on the prototype.\n\n\n    for (var methodName in ReactClassInterface) {\n      if (!Constructor.prototype[methodName]) {\n        Constructor.prototype[methodName] = null;\n      }\n    }\n\n    return Constructor;\n  }\n\n  return createClass;\n}\n\nmodule.exports = factory;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n}\n\nmodule.exports = invariant;"],"sourceRoot":""}