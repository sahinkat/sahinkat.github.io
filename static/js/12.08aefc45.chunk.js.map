{"version":3,"sources":["views/Dashboard/Dashboard.js"],"names":["axios","require","Loader","colorSet","options","tooltips","enabled","custom","CustomTooltips","responsive","maintainAspectRatio","animation","duration","hover","animationDuration","responsiveAnimationDuration","Dashboard","props","_this","Object","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","loading","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","state","radar","labels","datasets","bar","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","polar","self","get","then","_ref","i","forEach","continent","push","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","casesPerOneMillion","deathsPerOneMillion","testsPerOneMillion","activePerOneMillion","recoveredPerOneMillion","criticalPerOneMillion","_ref2","todayCases","todayDeaths","country","setState","catch","error","console","log","_this2","_ThemeContextProvider__WEBPACK_IMPORTED_MODULE_9__","context","loaded","removeLoadingBar","reactstrap__WEBPACK_IMPORTED_MODULE_7__","md","react_chartjs_2__WEBPACK_IMPORTED_MODULE_6__","Component"],"mappings":"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","file":"static/js/12.08aefc45.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Bar, Polar } from 'react-chartjs-2';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n} from 'reactstrap';\n\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport { ThemeContextConsumer } from \"../../ThemeContextProvider\";\n\nconst axios = require('axios');\nvar Loader = require('react-loader');\n\nconst colorSet = ['255,0,0', '0,255,0', '0,0,255', '255,255,0', '0,255,255', '255,0,255'];\nconst options = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: {\n      duration: 0\n  },\n  hover: {\n      animationDuration: 0\n  },\n  responsiveAnimationDuration: 0\n}\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      radar : {\n        labels: ['Cases Per 100.000', 'Deaths Per One Million', 'Tests Per 10.000', 'Active Per 100.000', 'Recovered Per 100.000', 'Critical Per Ten Million'],\n        datasets: [],\n      },\n      bar : {\n       labels: ['North America', 'Europe', 'South America', 'Asia', 'Africa', 'Australia/Oceania'],\n       datasets: [{\n         label: 'Today Cases',\n         backgroundColor: 'rgba(255,99,132,0.2)',\n         borderColor: 'rgba(255,99,132,1)',\n         borderWidth: 1,\n         hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n         hoverBorderColor: 'rgba(255,99,132,1)',\n         data: [0,0,0,0,0,0],\n       },\n       {\n         label: 'Today Deaths',\n         backgroundColor: 'rgba(179,181,198,0.2)',\n         borderColor: 'rgba(179,181,198,1)',\n         borderWidth: 1,\n         hoverBackgroundColor: 'rgba(179,181,198,0.4)',\n         hoverBorderColor: 'rgba(179,181,198,1)',\n         data: [0,0,0,0,0,0],\n       }],\n     },\n     polar : {\n       labels: ['North America', 'Europe', 'South America', 'Asia', 'Africa', 'Australia/Oceania'],\n       datasets: [{\n         data: [0,0,0,0,0,0],\n         backgroundColor: [\n           '#f86c6b',\n           '#ffc107',\n           '#20a8d8',\n           '#4dbd74',\n           '#2f353a',\n           '#c8ced3',\n         ],\n         label: 'My dataset',\n       }],\n     }\n    };\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  componentDidMount() {\n    let self = this;\n    let radar = this.state.radar;\n    let bar = this.state.bar;\n    let polar = this.state.polar;\n    bar.datasets = [\n      {\n        label: 'Today Cases',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: [],\n      },\n      {\n        label: 'Today Deaths',\n        backgroundColor: 'rgba(179,181,198,0.2)',\n        borderColor: 'rgba(179,181,198,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(179,181,198,0.4)',\n        hoverBorderColor: 'rgba(179,181,198,1)',\n        data: [],\n      }\n    ];\n    bar.labels = [];\n\n    polar.datasets = [\n      {\n        data: [],\n        backgroundColor: [\n          '#f86c6b',\n          '#ffc107',\n          '#20a8d8',\n          '#4dbd74',\n          '#2f353a',\n          '#c8ced3',\n        ],\n        label: 'My dataset',\n      }];\n    polar.labels = [];\n    axios.get('https://corona.lmao.ninja/v2/continents?yesterday=true')\n      .then(function ({ data }) {\n        let i = 0;\n        data.forEach(function (continent) {\n          radar.datasets.push(\n            {\n              label: continent.continent,\n              backgroundColor: 'rgba(' + colorSet[i] + ',0.2)',\n              borderColor: 'rgba(' + colorSet[i] + ',1)',\n              pointBackgroundColor: 'rgba(' + colorSet[i] + ',1)',\n              pointBorderColor: '#fff',\n              pointHoverBackgroundColor: '#fff',\n              pointHoverBorderColor: 'rgba(' + colorSet[i] + ',1)',\n              data: [continent.casesPerOneMillion/10, continent.deathsPerOneMillion, continent.testsPerOneMillion/100, continent.activePerOneMillion/10, continent.recoveredPerOneMillion/10, continent.criticalPerOneMillion*10],\n            }\n          );\n          polar.datasets[0].data.push(continent.casesPerOneMillion);\n          polar.labels.push(continent.continent);\n          i++;\n        });\n        axios.get('https://corona.lmao.ninja/v2/countries?yesterday=true&sort=todayCases')\n          .then(function ({ data }) {\n            for(let i = 0; i < 10; i++) {\n                bar.datasets[0].data.push(data[i].todayCases);\n                bar.datasets[1].data.push(data[i].todayDeaths);\n                bar.labels.push(data[i].country);\n            }\n            self.setState({\n              bar : bar,\n              radar : radar,\n              //polar : polar,\n            });\n          })\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  }\n\n  render() {\n\n    return (\n      <ThemeContextConsumer>\n        {context => (\n          <Loader loaded={context.removeLoadingBar}>\n            <div className=\"animated fadeIn\">\n              <Row>\n                <Col md=\"6\">\n                  <Card>\n                    <CardHeader>\n                      Countries With The Most New Cases\n                    </CardHeader>\n                    <CardBody>\n                      <div className=\"chart-wrapper\">\n                        <Bar data={this.state.bar} options={options} />\n                      </div>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col md=\"6\">\n                  <Card>\n                    <CardHeader>\n                      Continental Covid Cases Per One Million\n                    </CardHeader>\n                    <CardBody>\n                      <div className=\"chart-wrapper\">\n                        <Polar data={this.state.polar} options={options}/>\n                      </div>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </Loader>\n        )}\n      </ThemeContextConsumer>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}