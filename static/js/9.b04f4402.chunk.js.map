{"version":3,"sources":["../node_modules/regression/dist/regression.js","views/LogisticRegression/LogisticRegression.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","module","undefined","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_toConsumableArray","arr","Array","isArray","arr2","from","DEFAULT_OPTIONS","order","precision","period","determinationCoefficient","data","results","predictions","observations","forEach","d","push","sum","reduce","a","observation","mean","ssyy","difference","sse","accum","index","prediction","residual","round","number","factor","Math","pow","methods","linear","options","len","n","run","rise","gradient","intercept","predict","x","points","map","point","equation","r2","string","exponential","log","denominator","exp","b","coeffA","coeffB","logarithmic","power","polynomial","lhs","rhs","k","l","c","j","_l","coefficients","input","matrix","maxrow","abs","tmp","_j","_k","_j2","total","_k2","gaussianElimination","v","coeff","_i","concat","reverse","exports","keys","accumulator","name","_round","value","supplied","obj","defineProperty","enumerable","configurable","writable","apply","A","B","C","_","require","moment","colorSet","colorCode","getStyle","errors","Cases","props","_this","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","loading","react__WEBPACK_IMPORTED_MODULE_6___default","createElement","className","train","bind","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","state","maxConfirmed","mainChartOpts","tooltips","enabled","custom","CustomTooltips","intersect","mode","position","callbacks","labelColor","tooltipItem","chart","backgroundColor","datasets","datasetIndex","borderColor","maintainAspectRatio","legend","display","scales","xAxes","gridLines","drawOnChartArea","yAxes","ticks","beginAtZero","maxTicksLimit","elements","radius","hitRadius","hoverRadius","hoverBorderWidth","countries","Key","CountryCode","CountryName","inputs","selectedCountry","selectedCountries","mainChart","labels","radioSelected","context","setState","drawCovidGraph","removedCountry","remove","country","e","self","allDataObject","graphData","strMinDate","countryData","cases","Date","minDate","today","setDate","getDate","format","xIndex","dataForLogistic","xDataForLogistic","yDataForLogistic","countryConfirmedData","previousNumber","date","countryDataAtDate","find","Confirmed","regression","ma","ema","wma","predictedConfirmedData","predictIndex","label","pointHoverBackgroundColor","borderWidth","epochs","alpha","_this2","_loop","trainIndex","predY","func","error","epoch","x1","_this3","_ThemeContextProvider__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","row","md","htmlFor","disabled","type","id","bsSize","onChange","onCountryChange","r","color","isOpen","toggle","onDismiss","sm","placeholder","onMaxConfirmedChange","aria-label","onClick","onRadioBtnClick","active","style","height","marginTop","react_chartjs_2__WEBPACK_IMPORTED_MODULE_7__","Component"],"mappings":"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","file":"static/js/9.b04f4402.chunk.js","sourcesContent":["(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['module'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod);\n    global.regression = mod.exports;\n  }\n})(this, function (module) {\n  'use strict';\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  function _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  }\n\n  var DEFAULT_OPTIONS = {\n    order: 2,\n    precision: 2,\n    period: null\n  };\n  /**\n  * Determine the coefficient of determination (r^2) of a fit from the observations\n  * and predictions.\n  *\n  * @param {Array<Array<number>>} data - Pairs of observed x-y values\n  * @param {Array<Array<number>>} results - Pairs of observed predicted x-y values\n  *\n  * @return {number} - The r^2 value, or NaN if one cannot be calculated.\n  */\n\n  function determinationCoefficient(data, results) {\n    var predictions = [];\n    var observations = [];\n    data.forEach(function (d, i) {\n      if (d[1] !== null) {\n        observations.push(d);\n        predictions.push(results[i]);\n      }\n    });\n    var sum = observations.reduce(function (a, observation) {\n      return a + observation[1];\n    }, 0);\n    var mean = sum / observations.length;\n    var ssyy = observations.reduce(function (a, observation) {\n      var difference = observation[1] - mean;\n      return a + difference * difference;\n    }, 0);\n    var sse = observations.reduce(function (accum, observation, index) {\n      var prediction = predictions[index];\n      var residual = observation[1] - prediction[1];\n      return accum + residual * residual;\n    }, 0);\n    return 1 - sse / ssyy;\n  }\n  /**\n  * Determine the solution of a system of linear equations A * x = b using\n  * Gaussian elimination.\n  *\n  * @param {Array<Array<number>>} input - A 2-d matrix of data in row-major form [ A | b ]\n  * @param {number} order - How many degrees to solve for\n  *\n  * @return {Array<number>} - Vector of normalized solution coefficients matrix (x)\n  */\n\n\n  function gaussianElimination(input, order) {\n    var matrix = input;\n    var n = input.length - 1;\n    var coefficients = [order];\n\n    for (var i = 0; i < n; i++) {\n      var maxrow = i;\n\n      for (var j = i + 1; j < n; j++) {\n        if (Math.abs(matrix[i][j]) > Math.abs(matrix[i][maxrow])) {\n          maxrow = j;\n        }\n      }\n\n      for (var k = i; k < n + 1; k++) {\n        var tmp = matrix[k][i];\n        matrix[k][i] = matrix[k][maxrow];\n        matrix[k][maxrow] = tmp;\n      }\n\n      for (var _j = i + 1; _j < n; _j++) {\n        for (var _k = n; _k >= i; _k--) {\n          matrix[_k][_j] -= matrix[_k][i] * matrix[i][_j] / matrix[i][i];\n        }\n      }\n    }\n\n    for (var _j2 = n - 1; _j2 >= 0; _j2--) {\n      var total = 0;\n\n      for (var _k2 = _j2 + 1; _k2 < n; _k2++) {\n        total += matrix[_k2][_j2] * coefficients[_k2];\n      }\n\n      coefficients[_j2] = (matrix[n][_j2] - total) / matrix[_j2][_j2];\n    }\n\n    return coefficients;\n  }\n  /**\n  * Round a number to a precision, specificed in number of decimal places\n  *\n  * @param {number} number - The number to round\n  * @param {number} precision - The number of decimal places to round to:\n  *                             > 0 means decimals, < 0 means powers of 10\n  *\n  *\n  * @return {numbr} - The number, rounded\n  */\n\n\n  function round(number, precision) {\n    var factor = Math.pow(10, precision);\n    return Math.round(number * factor) / factor;\n  }\n  /**\n  * The set of all fitting methods\n  *\n  * @namespace\n  */\n\n\n  var methods = {\n    linear: function linear(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = 0;\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          len++;\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0];\n          sum[3] += data[n][0] * data[n][1];\n          sum[4] += data[n][1] * data[n][1];\n        }\n      }\n\n      var run = len * sum[2] - sum[0] * sum[0];\n      var rise = len * sum[3] - sum[0] * sum[1];\n      var gradient = run === 0 ? 0 : round(rise / run, options.precision);\n      var intercept = round(sum[1] / len - gradient * sum[0] / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(gradient * x + intercept, options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [gradient, intercept],\n        r2: round(determinationCoefficient(data, points), options.precision),\n        string: intercept === 0 ? 'y = ' + gradient + 'x' : 'y = ' + gradient + 'x + ' + intercept\n      };\n    },\n    exponential: function exponential(data, options) {\n      var sum = [0, 0, 0, 0, 0, 0];\n\n      for (var n = 0; n < data.length; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += data[n][0];\n          sum[1] += data[n][1];\n          sum[2] += data[n][0] * data[n][0] * data[n][1];\n          sum[3] += data[n][1] * Math.log(data[n][1]);\n          sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n          sum[5] += data[n][0] * data[n][1];\n        }\n      }\n\n      var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n      var a = Math.exp((sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n      var b = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n      var coeffA = round(a, options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coeffA * Math.exp(coeffB * x), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'e^(' + coeffB + 'x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    logarithmic: function logarithmic(data, options) {\n      var sum = [0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += data[n][1] * Math.log(data[n][0]);\n          sum[2] += data[n][1];\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var a = (len * sum[1] - sum[2] * sum[0]) / (len * sum[3] - sum[0] * sum[0]);\n      var coeffB = round(a, options.precision);\n      var coeffA = round((sum[2] - coeffB * sum[0]) / len, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA + coeffB * Math.log(x), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + ' + ' + coeffB + ' ln(x)',\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    power: function power(data, options) {\n      var sum = [0, 0, 0, 0, 0];\n      var len = data.length;\n\n      for (var n = 0; n < len; n++) {\n        if (data[n][1] !== null) {\n          sum[0] += Math.log(data[n][0]);\n          sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n          sum[2] += Math.log(data[n][1]);\n          sum[3] += Math.pow(Math.log(data[n][0]), 2);\n        }\n      }\n\n      var b = (len * sum[1] - sum[0] * sum[2]) / (len * sum[3] - Math.pow(sum[0], 2));\n      var a = (sum[2] - b * sum[0]) / len;\n      var coeffA = round(Math.exp(a), options.precision);\n      var coeffB = round(b, options.precision);\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(round(coeffA * Math.pow(x, coeffB), options.precision), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      return {\n        points: points,\n        predict: predict,\n        equation: [coeffA, coeffB],\n        string: 'y = ' + coeffA + 'x^' + coeffB,\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    },\n    polynomial: function polynomial(data, options) {\n      var lhs = [];\n      var rhs = [];\n      var a = 0;\n      var b = 0;\n      var len = data.length;\n      var k = options.order + 1;\n\n      for (var i = 0; i < k; i++) {\n        for (var l = 0; l < len; l++) {\n          if (data[l][1] !== null) {\n            a += Math.pow(data[l][0], i) * data[l][1];\n          }\n        }\n\n        lhs.push(a);\n        a = 0;\n        var c = [];\n\n        for (var j = 0; j < k; j++) {\n          for (var _l = 0; _l < len; _l++) {\n            if (data[_l][1] !== null) {\n              b += Math.pow(data[_l][0], i + j);\n            }\n          }\n\n          c.push(b);\n          b = 0;\n        }\n\n        rhs.push(c);\n      }\n\n      rhs.push(lhs);\n      var coefficients = gaussianElimination(rhs, k).map(function (v) {\n        return round(v, options.precision);\n      });\n\n      var predict = function predict(x) {\n        return [round(x, options.precision), round(coefficients.reduce(function (sum, coeff, power) {\n          return sum + coeff * Math.pow(x, power);\n        }, 0), options.precision)];\n      };\n\n      var points = data.map(function (point) {\n        return predict(point[0]);\n      });\n      var string = 'y = ';\n\n      for (var _i = coefficients.length - 1; _i >= 0; _i--) {\n        if (_i > 1) {\n          string += coefficients[_i] + 'x^' + _i + ' + ';\n        } else if (_i === 1) {\n          string += coefficients[_i] + 'x + ';\n        } else {\n          string += coefficients[_i];\n        }\n      }\n\n      return {\n        string: string,\n        points: points,\n        predict: predict,\n        equation: [].concat(_toConsumableArray(coefficients)).reverse(),\n        r2: round(determinationCoefficient(data, points), options.precision)\n      };\n    }\n  };\n\n  function createWrapper() {\n    var reduce = function reduce(accumulator, name) {\n      return _extends({\n        _round: round\n      }, accumulator, _defineProperty({}, name, function (data, supplied) {\n        return methods[name](data, _extends({}, DEFAULT_OPTIONS, supplied));\n      }));\n    };\n\n    return Object.keys(methods).reduce(reduce, {});\n  }\n\n  module.exports = createWrapper();\n});","import React, { Component } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Alert,\n  Button,\n  ButtonGroup,\n  ButtonToolbar,\n  Card,\n  CardBody,\n  CardHeader,\n  CardTitle,\n  Col,\n  FormGroup,\n  Input,\n  Label,\n  Row\n} from 'reactstrap';\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport { getStyle } from '@coreui/coreui/dist/js/coreui-utilities';\nimport {\n  ma, ema, wma\n} from 'moving-averages'\nimport regression from 'regression';\nimport { ThemeContextConsumer } from \"../../ThemeContextProvider\";\n\nvar _ = require('lodash');\nvar moment = require('moment');\n\nconst colorSet = [\"primary\", \"warning\", \"success\", \"danger\", \"info\"];\nconst colorCode = [getStyle('--primary'), getStyle('--warning'), getStyle('--success'), getStyle('--danger'), getStyle('--info')];\n\nvar A, B, C;\nvar errors = [];\n\nclass Cases extends Component {\n  constructor(props) {\n    super(props);\n    this.train = this.train.bind(this);\n    this.predict = this.predict.bind(this);\n\n    this.state = {\n      maxConfirmed : 180000,\n      mainChartOpts : {\n        tooltips: {\n          enabled: false,\n          custom: CustomTooltips,\n          intersect: true,\n          mode: 'index',\n          position: 'nearest',\n          callbacks: {\n            labelColor: function(tooltipItem, chart) {\n              return { backgroundColor: chart.data.datasets[tooltipItem.datasetIndex].borderColor }\n            }\n          }\n        },\n        maintainAspectRatio: false,\n        legend: {\n          display: false,\n        },\n        scales: {\n          xAxes: [\n            {\n              gridLines: {\n                drawOnChartArea: false,\n              },\n            }],\n          yAxes: [\n            {\n              ticks: {\n                beginAtZero: true,\n                maxTicksLimit: 40,\n              },\n            }],\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3,\n          },\n        },\n      },\n      countries : [\n        {\n          \"Key\":\"TR\",\n          \"CountryCode\":\"TR\",\n          \"CountryName\":\"Turkey\",\n        }\n      ],\n      inputs : {\n        selectedCountry   : \"\",\n        selectedCountries : [],\n      },\n      mainChart : {\n        labels: [],\n        datasets: [],\n      },\n      radioSelected : 0,\n    };\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  onCountryChange(context, selectedCountry) {\n    if(selectedCountry.target.value !== ''){\n      let inputs = this.state.inputs;\n      inputs.selectedCountries.push(selectedCountry.target.value);\n      this.setState({\n        inputs : inputs,\n      });\n    }\n\n    this.drawCovidGraph(context);\n  }\n\n  onDismiss(removedCountry, context) {\n    if(removedCountry !== ''){\n      let inputs = this.state.inputs;\n      _.remove(inputs.selectedCountries, function (country) {\n        return country === removedCountry;\n      });\n      this.setState({\n        inputs : inputs,\n      });\n    }\n\n    this.drawCovidGraph(context);\n  }\n\n  onRadioBtnClick(e, context){\n    this.setState({\n      radioSelected : e,\n    });\n\n    this.drawCovidGraph(context)\n  }\n\n  onMaxConfirmedChange(context, e){\n    if(e.target.value !== ''){\n      this.setState({\n        maxConfirmed : e.target.value,\n      });\n    }\n\n    this.drawCovidGraph(context);\n  }\n\n  drawCovidGraph(context){\n    let self = this;\n    let allDataObject = context.allDataObject;\n    let selectedCountries = this.state.inputs.selectedCountries;\n    let mainChart = this.state.mainChart;\n\n    let graphData = [];\n    mainChart.labels = [];\n    mainChart.datasets = [];\n    let strMinDate = \"9999-99-99\";\n    selectedCountries.forEach(function (country) {\n      let countryData = allDataObject[country];\n      graphData.push(countryData);\n      if(countryData.cases !== undefined && countryData.cases.length > 0) {\n        if(strMinDate > countryData.cases[0].Date) {\n          strMinDate = countryData.cases[0].Date;\n        }\n      }\n    });\n    let minDate = new Date(strMinDate);\n    let today = new Date();\n    today.setDate(today.getDate() + 100);\n\n    while(minDate < today) {\n      mainChart.labels.push(moment(minDate).format('DD/MM/YYYY'));\n      minDate.setDate(minDate.getDate() + 1);\n    }\n\n    let index = 0;\n    let xIndex = 0;\n    let dataForLogistic = [];\n    let xDataForLogistic = [];\n    let yDataForLogistic = [];\n    graphData.forEach(function (data) {\n      let countryConfirmedData = [];\n      let previousNumber = 0;\n      mainChart.labels.forEach(function (date) {\n        let countryDataAtDate = _.find(data.cases, ['Date', moment(date, 'DD/MM/YYYY').format('YYYY-MM-DD')]);\n        if(countryDataAtDate !== undefined){\n          countryConfirmedData.push(countryDataAtDate.Confirmed);\n          previousNumber = countryDataAtDate.Confirmed;\n          dataForLogistic.push([xIndex, countryDataAtDate.Confirmed]);\n          yDataForLogistic.push(countryDataAtDate.Confirmed);\n        } else {\n          countryConfirmedData.push(previousNumber);\n          dataForLogistic.push([xIndex, previousNumber])\n          yDataForLogistic.push(previousNumber);\n        }\n        xDataForLogistic.push(xIndex);\n        xIndex++;\n      });\n      regression.polynomial(dataForLogistic, { order: 3 });\n\n      if(self.state.radioSelected === 1){\n        countryConfirmedData = ma(countryConfirmedData, 3);\n      } else if(self.state.radioSelected === 2){\n        countryConfirmedData = ema(countryConfirmedData, 3);\n      } else if(self.state.radioSelected === 3){\n        countryConfirmedData = wma(countryConfirmedData, 3);\n      }\n\n      //epochs = 500;\n      //alpha = 0.2;\n      self.train(500, 0.2, yDataForLogistic);\n\n      let predictedConfirmedData = [];\n      let predictIndex = 0;\n      countryConfirmedData.forEach(function (data) {\n        //predictedConfirmedData.push(result.predict(predictIndex)[1]);\n        predictedConfirmedData.push(self.predict(predictIndex));\n        predictIndex++;\n      });\n\n      for(var i=0; i<100; i++){\n        predictedConfirmedData.push(self.predict(predictIndex + i));\n      }\n\n      mainChart.datasets.push({\n        label: data.CountryName,\n        backgroundColor: 'transparent',\n        borderColor: colorCode[index],\n        pointHoverBackgroundColor: '#fff',\n        borderWidth: 2,\n        data: countryConfirmedData,\n      });\n      mainChart.datasets.push({\n        label: 'Prediction',\n        backgroundColor: 'transparent',\n        borderColor: colorCode[index+1],\n        pointHoverBackgroundColor: '#fff',\n        borderWidth: 2,\n        data: predictedConfirmedData,\n      });\n      index++;\n    });\n\n    this.setState({\n      mainChart : mainChart,\n    });\n\n  }\n\n  train(epochs, alpha, data){\n      errors =[];\n      A = 0.0;\n      B = 0.0;\n      C = 0.0;\n\n      for (var i=0; i<epochs; i++){\n          var error;\n          let trainIndex = 0;\n          data.forEach(d=>{\n              var predY;\n              var func;\n              func = A*Math.pow(trainIndex, 1.85)/100+B*trainIndex/100+C;\n              predY = 1/(1+Math.exp(-func));\n              error = predY - d/this.state.maxConfirmed;\n\n              A = A + alpha*-error*predY*(1-predY)*Math.pow(trainIndex, 1.85)/100;\n              B = B + alpha*-error*predY*(1-predY)*trainIndex/100;\n              C = C + alpha*-error*predY*(1-predY)*1.0;\n\n              trainIndex++;\n              // errors.push({error:error, iteration:count});\n          })\n\n          errors.push({error:error, epoch:i});\n\n          //var accuracy = 1+Math.round(error*100)/100;\n\n          //var progresspercent = 100*i/500;\n      }\n  }\n\n  predict(x1){\n    var predY;\n    var func;\n    func = A*Math.pow(x1, 1.85)/100+B*x1/100+C;\n    predY = this.state.maxConfirmed/(1+Math.exp(-func));\n\n    return predY;\n  }\n\n  render() {\n\n    return (\n      <ThemeContextConsumer>\n        {context => (\n          <div className=\"animated fadeIn\">\n            <Row>\n              <Col>\n                <Card>\n                  <CardHeader>\n                    <FormGroup row>\n                      <Col md=\"4\">\n                        <Label htmlFor=\"countries\"><mark className=\"text-primary\"><strong><small>*Countries</small></strong></mark></Label>\n                        <Input disabled={this.state.inputs.selectedCountries.length > 0 ? true : false} type=\"select\" name=\"countries\" id=\"countries\" bsSize=\"sm\" value={this.state.inputs.selectedCountry} onChange={this.onCountryChange.bind(this, context)}>\n                          <option value=\"\">Please add a country</option>\n                          {\n                            context.countries.map((r , i) => <option key={i} value={r.Key}>{r.CountryName}</option>)\n                          }\n                        </Input>\n                      </Col>\n                    </FormGroup>\n                    <Row>\n                    {\n                      this.state.inputs.selectedCountries.map((r , i) =>\n                        <Alert className=\"mb-0 mr-1 pr-5\" key={r + i} color={i < 5 ? colorSet[i] : colorSet[4]} isOpen={true} toggle={this.onDismiss.bind(this, r, context)}>\n                          <div>{context.allDataObject[r].CountryName}</div>\n                        </Alert>\n                      )\n                    }\n                    </Row>\n                  </CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm=\"3\">\n                        <CardTitle className=\"mb-0\">Covid-19 Cases</CardTitle>\n                        <div className=\"small text-muted\">2020</div>\n                      </Col>\n                      <Col sm=\"3\">\n                        <FormGroup>\n                          <Label htmlFor=\"name\">Prediction Number</Label>\n                          <Input type=\"text\" id=\"maxConfirmed\" name=\"maxConfirmed\" value={this.state.maxConfirmed} placeholder=\"Enter max confirmed\" onChange={this.onMaxConfirmedChange.bind(this, context)} />\n                        </FormGroup>\n                      </Col>\n                      <Col sm=\"6\" className=\"d-none d-sm-inline-block\">\n                        <ButtonToolbar className=\"float-right\" aria-label=\"Toolbar with button groups\">\n                          <ButtonGroup className=\"mr-3\" aria-label=\"First group\">\n                            <Button className=\"text-dark\" color=\"outline-primary\" onClick={() => this.onRadioBtnClick(0, context)} active={this.state.radioSelected !== 0}>Normal</Button>\n                            <Button className=\"text-dark\" color=\"outline-primary\" onClick={() => this.onRadioBtnClick(1, context)} active={this.state.radioSelected !== 1}>MA</Button>\n                            <Button className=\"text-dark\" color=\"outline-primary\" onClick={() => this.onRadioBtnClick(2, context)} active={this.state.radioSelected !== 2}>EMA</Button>\n                            <Button className=\"text-dark\" color=\"outline-primary\" onClick={() => this.onRadioBtnClick(3, context)} active={this.state.radioSelected !== 3}>WMA</Button>\n                          </ButtonGroup>\n                        </ButtonToolbar>\n                      </Col>\n                    </Row>\n                    <div className=\"chart-wrapper\" style={{ height: 400 + 'px', marginTop: 20 + 'px' }}>\n                       {\n                         <Line data={this.state.mainChart} options={this.state.mainChartOpts} height={400} />\n                       }\n                    </div>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </div>\n        )}\n      </ThemeContextConsumer>\n    );\n  }\n}\n\nexport default Cases;\n"],"sourceRoot":""}