{"version":3,"sources":["views/Dashboard/Dashboard.js"],"names":["axios","require","Loader","options","tooltips","enabled","custom","CustomTooltips","responsive","maintainAspectRatio","animation","duration","hover","animationDuration","responsiveAnimationDuration","Dashboard","props","_this","Object","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sahinkatlan_Repositories_github_covid_19_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","loading","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","state","bar","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","data","continentalData","self","get","then","_ref","_ref2","i","push","todayCases","todayDeaths","country","setState","catch","error","console","log","_this2","_ThemeContextProvider__WEBPACK_IMPORTED_MODULE_9__","context","loaded","removeLoadingBar","reactstrap__WEBPACK_IMPORTED_MODULE_7__","md","striped","map","r","continent","casesPerOneMillion","deathsPerOneMillion","testsPerOneMillion","react_chartjs_2__WEBPACK_IMPORTED_MODULE_6__","Component"],"mappings":"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","file":"static/js/13.6c32a763.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table,\n} from 'reactstrap';\n\nimport { CustomTooltips } from '@coreui/coreui-plugin-chartjs-custom-tooltips';\nimport { ThemeContextConsumer } from \"../../ThemeContextProvider\";\n\nconst axios = require('axios');\nvar Loader = require('react-loader');\n\nconst options = {\n  tooltips: {\n    enabled: false,\n    custom: CustomTooltips\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  animation: {\n      duration: 0\n  },\n  hover: {\n      animationDuration: 0\n  },\n  responsiveAnimationDuration: 0\n}\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bar : {\n       labels: ['North America', 'Europe', 'South America', 'Asia', 'Africa', 'Australia/Oceania'],\n       datasets: [{\n         label: 'Today Cases',\n         backgroundColor: 'rgba(255,99,132,0.2)',\n         borderColor: 'rgba(255,99,132,1)',\n         borderWidth: 1,\n         hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n         hoverBorderColor: 'rgba(255,99,132,1)',\n         data: [0,0,0,0,0,0],\n       },\n       {\n         label: 'Today Deaths',\n         backgroundColor: 'rgba(179,181,198,0.2)',\n         borderColor: 'rgba(179,181,198,1)',\n         borderWidth: 1,\n         hoverBackgroundColor: 'rgba(179,181,198,0.4)',\n         hoverBorderColor: 'rgba(179,181,198,1)',\n         data: [0,0,0,0,0,0],\n       }],\n     },\n     continentalData : [],\n    };\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  componentDidMount() {\n    let self = this;\n    let bar = this.state.bar;\n    bar.datasets = [\n      {\n        label: 'Today Cases',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: [],\n      },\n      {\n        label: 'Today Deaths',\n        backgroundColor: 'rgba(179,181,198,0.2)',\n        borderColor: 'rgba(179,181,198,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(179,181,198,0.4)',\n        hoverBorderColor: 'rgba(179,181,198,1)',\n        data: [],\n      }\n    ];\n    bar.labels = [];\n\n    axios.get('https://corona.lmao.ninja/v2/continents?yesterday=true')\n      .then(function ({ data }) {\n        let continentalData = data;\n        axios.get('https://corona.lmao.ninja/v2/countries?yesterday=true&sort=todayCases')\n          .then(function ({ data }) {\n            for(let i = 0; i < 10; i++) {\n                bar.datasets[0].data.push(data[i].todayCases);\n                bar.datasets[1].data.push(data[i].todayDeaths);\n                bar.labels.push(data[i].country);\n            }\n            self.setState({\n              bar : bar,\n              continentalData : continentalData,\n            });\n          })\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      });\n  }\n\n  render() {\n\n    return (\n      <ThemeContextConsumer>\n        {context => (\n          <Loader loaded={context.removeLoadingBar}>\n            <div className=\"animated fadeIn\">\n              <Row>\n                <Col md=\"6\">\n                  <Card>\n                    <CardHeader>\n                      <i className=\"fa fa-ambulance\"></i> Continental Covid Stats Per One Million\n                    </CardHeader>\n                    <CardBody>\n                      <Table responsive striped>\n                        <thead>\n                          <tr>\n                            <th>Continent</th>\n                            <th>Cases</th>\n                            <th>Deaths</th>\n                            <th>Tests</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {\n                            this.state.continentalData.map((r , i) =>\n                              <tr>\n                                <td>{r.continent}</td>\n                                <td>{r.casesPerOneMillion}</td>\n                                <td>{r.deathsPerOneMillion}</td>\n                                <td>{r.testsPerOneMillion}</td>\n                              </tr>\n                            )\n                          }\n                        </tbody>\n                      </Table>\n                    </CardBody>\n                  </Card>\n                </Col>\n                <Col md=\"6\">\n                  <Card>\n                    <CardHeader>\n                      <i className=\"fa fa-ambulance\"></i> Countries With The Most New Cases\n                    </CardHeader>\n                    <CardBody>\n                      <div className=\"chart-wrapper\">\n                        <Bar data={this.state.bar} options={options} />\n                      </div>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row>\n            </div>\n          </Loader>\n        )}\n      </ThemeContextConsumer>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}